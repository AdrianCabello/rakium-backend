// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  client_admin
  client_user
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum SiteType {
  BASIC
  PREMIUM
  ENTERPRISE
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      UserRole
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations based on role
  rakiumClient    RakiumClient?    @relation(fields: [rakiumClientId], references: [id])
  rakiumClientId  String?
  finalUser       FinalUser?

  @@index([rakiumClientId])
}

model RakiumClient {
  id            String       @id @default(uuid())
  name          String
  domain        String       @unique
  email         String       @unique
  siteType      SiteType
  isActive      Boolean      @default(true)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  // Relations
  users         User[]
  finalUsers    FinalUser[]
  appointments  Appointment[]
  schedules     Schedule[]
  content       SiteContent?
}

model FinalUser {
  id            String       @id @default(uuid())
  name          String
  email         String       @unique
  phone         String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  // Relations
  user          User         @relation(fields: [userId], references: [id])
  userId        String       @unique
  rakiumClient  RakiumClient @relation(fields: [rakiumClientId], references: [id])
  rakiumClientId String
  appointments  Appointment[]

  @@index([rakiumClientId])
}

model Appointment {
  id            String           @id @default(uuid())
  date          DateTime
  status        AppointmentStatus @default(PENDING)
  notes         String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt

  // Relations
  finalUser     FinalUser        @relation(fields: [finalUserId], references: [id])
  finalUserId   String
  rakiumClient  RakiumClient     @relation(fields: [rakiumClientId], references: [id])
  rakiumClientId String

  @@index([finalUserId])
  @@index([rakiumClientId])
}

model Schedule {
  id            String   @id @default(uuid())
  dayOfWeek     Int      // 0-6 (Sunday-Saturday)
  startTime     DateTime
  endTime       DateTime
  isAvailable   Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  rakiumClient  RakiumClient @relation(fields: [rakiumClientId], references: [id])
  rakiumClientId String

  @@index([rakiumClientId])
}

model SiteContent {
  id            String   @id @default(uuid())
  content       Json     // Stores the editable content for the site
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  rakiumClient  RakiumClient @relation(fields: [rakiumClientId], references: [id])
  rakiumClientId String      @unique

  @@index([rakiumClientId])
}
